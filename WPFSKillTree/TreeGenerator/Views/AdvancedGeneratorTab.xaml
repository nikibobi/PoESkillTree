<UserControl x:Class="POESKillTree.TreeGenerator.Views.AdvancedGeneratorTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:l="clr-namespace:POESKillTree.Localization.XAML"
             xmlns:viewModels="clr-namespace:POESKillTree.TreeGenerator.ViewModels"
             xmlns:metroControls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:model="clr-namespace:POESKillTree.TreeGenerator.Model"
             xmlns:pseudoAttributes="clr-namespace:POESKillTree.TreeGenerator.Model.PseudoAttributes"
             xmlns:converter="clr-namespace:POESKillTree.Utils.Converter"
             mc:Ignorable="d" 
             x:Name="Control"
             d:DesignHeight="400" d:DesignWidth="600" d:DataContext="{d:DesignInstance viewModels:AdvancedTabViewModel}">
    <UserControl.Resources>
        <Style x:Key="TabControlStyle1" TargetType="{x:Type TabControl}">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <UniformGrid x:Name="HeaderPanel" Grid.Column="0" Rows="1" IsItemsHost="True" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentTemplate="{TemplateBinding SelectedContentTemplate}" Content="{TemplateBinding SelectedContent}" ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.Resources>
            <converter:EnumToDescriptionConverter x:Key="EnumToDescriptionConverter" />
            <converter:EnumToBoolConverter x:Key="EnumToBoolConverter" />
            <converter:InvertBoolConverter x:Key="InvertBoolConverter" />
            <converter:FlagsToBoolConverter x:Key="FlagsToBoolConverter" />
            <ControlTemplate x:Key="ExitIcon">
                <Canvas Width="10" Height="10" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                    <Path Width="10" Height="10" Stretch="Fill" Fill="{DynamicResource BlackColorBrush}" 
                      Data="F1 M 26.9166,22.1667L 37.9999,33.25L 49.0832,22.1668L 53.8332,26.9168L 42.7499,38L 53.8332,49.0834L 49.0833,53.8334L 37.9999,42.75L 26.9166,53.8334L 22.1666,49.0833L 33.25,38L 22.1667,26.9167L 26.9166,22.1667 Z "/>
                </Canvas>
            </ControlTemplate>
        </Grid.Resources>

        <TabControl metroControls:TabControlHelper.IsUnderlined="True" Style="{DynamicResource TabControlStyle1}">
            <TabItem metroControls:ControlsHelper.HeaderFontSize="15">
                <TabItem.Header>
                    <l:Catalog Message="Attributes"/>
                </TabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="85" />
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="50" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <UniformGrid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="5" Rows="1">
                        <Button Margin="5" HorizontalAlignment="Center" Command="{Binding LoadAttributesFromTreeCommand}">
                            <l:Catalog Message="Load from tree"/>
                        </Button>
                        <Button Margin="5" HorizontalAlignment="Center" Command="{Binding ConvertAttributeToPseudoConstraintsCommand}">
                            <l:Catalog Message="Convert to Pseudo Attributes" />
                            <Button.ToolTip>
                                <l:Catalog Message="Converts the attributes to pseudo attributes where possible using the defined settings."/>
                            </Button.ToolTip>
                        </Button>
                    </UniformGrid>

                    <ComboBox Grid.Column="0" Grid.Row="1" Margin="4,4,2,4"
                              SelectedItem="{Binding NewAttributeConstraint.Data}"
                              ItemsSource="{Binding AttributesView}">
                        <ComboBox.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock d:DataContext="{d:DesignInstance CollectionViewGroup}" Foreground="{StaticResource AccentColorBrush}" Text="{Binding Name}"/>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </ComboBox.GroupStyle>
                    </ComboBox>
                    <metroControls:NumericUpDown Grid.Column="1" Grid.Row="1" Minimum="0.01" Margin="2,4" StringFormat="{}{0:#0.##}"
                                                 Value="{Binding NewAttributeConstraint.TargetValue}"/>
                    <Slider Grid.Column="2" Grid.Row="1" TickFrequency="1" IsSnapToTickEnabled="True" Margin="2,6"
                            Value="{Binding NewAttributeConstraint.Weight}"
                            Minimum="{Binding NewAttributeConstraint.MinWeight}" Maximum="{Binding NewAttributeConstraint.MaxWeight}"/>
                    <Label Grid.Column="3" Grid.Row="1" Content="{Binding NewAttributeConstraint.Weight}" Margin="2,4" ContentStringFormat="{}{0}%" />
                    <Button Grid.Column="4" Grid.Row="1" Margin="2,4" Command="{Binding AddAttributeConstraintCommand}" IsDefault="True">
                        <l:Catalog Message="Add"/>
                    </Button>

                    <DataGrid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="5"
                            ItemsSource="{Binding AttributeConstraints}" AutoGenerateColumns="False"
                            CanUserAddRows="False" CanUserDeleteRows="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Data}" IsReadOnly="True" MinWidth="300">
                                <DataGridTextColumn.Header>
                                    <l:Catalog Message="Attribute"/>
                                </DataGridTextColumn.Header>
                            </DataGridTextColumn>
                            <DataGridTemplateColumn d:DataContext="{d:DesignInstance model:NonGenericTargetWeightConstraint}" MinWidth="80">
                                <DataGridTemplateColumn.Header>
                                    <l:Catalog Message="Target"/>
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <metroControls:NumericUpDown BorderThickness="0" Minimum="0.01" StringFormat="{}{0:#0.##}"
                                                                     Value="{Binding TargetValue, UpdateSourceTrigger=PropertyChanged}"
                                                                     Background="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridCell}}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn d:DataContext="{d:DesignInstance model:NonGenericTargetWeightConstraint}" MinWidth="150">
                                <DataGridTemplateColumn.Header>
                                    <l:Catalog Message="Weight"/>
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Slider IsEnabled="True" Width="100" TickFrequency="1" IsSnapToTickEnabled="True" Margin="0,2"
                                                    Value="{Binding Weight, UpdateSourceTrigger=PropertyChanged}" Minimum="{Binding MinWeight}" Maximum="{Binding MaxWeight}"/>
                                            <Label Content="{Binding Weight}" Width="50" ContentStringFormat="{}{0}%"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Command="{Binding DataContext.RemoveAttributeConstraintCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                                CommandParameter="{Binding}" Width="30" Height="30"
                                                Style="{DynamicResource MetroCircleButtonStyle}">
                                            <ContentControl Template="{StaticResource ExitIcon}" />
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>

            <TabItem metroControls:ControlsHelper.HeaderFontSize="15">
                <TabItem.Header>
                    <l:Catalog Message="Pseudo Attributes"/>
                </TabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="85" />
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="50" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <ComboBox Grid.Column="0" Grid.Row="0" Margin="4,4,2,4"
                              SelectedItem="{Binding NewPseudoAttributeConstraint.Data}"
                              ItemsSource="{Binding PseudoAttributesView}">
                        <ComboBox.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock d:DataContext="{d:DesignInstance CollectionViewGroup}" Foreground="{StaticResource AccentColorBrush}" Text="{Binding Name}"/>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </ComboBox.GroupStyle>
                    </ComboBox>
                    <metroControls:NumericUpDown Grid.Column="1" Grid.Row="0" Minimum="0.01" Margin="2,4" StringFormat="{}{0:#0.##}"
                                                 Value="{Binding NewPseudoAttributeConstraint.TargetValue}"/>
                    <Slider Grid.Column="2" Grid.Row="0" TickFrequency="1" IsSnapToTickEnabled="True" Margin="2,6"
                            Value="{Binding NewPseudoAttributeConstraint.Weight}"
                            Minimum="{Binding NewPseudoAttributeConstraint.MinWeight}" Maximum="{Binding NewPseudoAttributeConstraint.MaxWeight}"/>
                    <Label Grid.Column="3" Grid.Row="0" Content="{Binding NewPseudoAttributeConstraint.Weight}" Margin="2,4" ContentStringFormat="{}{0}%" />
                    <Button Grid.Column="4" Grid.Row="0" Margin="2,4" Command="{Binding AddPseudoConstraintCommand}" IsDefault="True">
                        <l:Catalog Message="Add"/>
                    </Button>

                    <DataGrid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="5"
                              ItemsSource="{Binding PseudoAttributeConstraints}"
                              CanUserAddRows="False" CanUserDeleteRows="False" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Data}" IsReadOnly="True" MinWidth="300">
                                <DataGridTextColumn.Header>
                                    <l:Catalog Message="Pseudo attribute"/>
                                </DataGridTextColumn.Header>
                            </DataGridTextColumn>
                            <DataGridTemplateColumn d:DataContext="{d:DesignInstance model:NonGenericTargetWeightConstraint}" MinWidth="80">
                                <DataGridTemplateColumn.Header>
                                    <l:Catalog Message="Target"/>
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <metroControls:NumericUpDown BorderThickness="0" Minimum="0.01" StringFormat="{}{0:#0.##}"
                                                                     Value="{Binding TargetValue, UpdateSourceTrigger=PropertyChanged}"
                                                                     Background="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridCell}}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn d:DataContext="{d:DesignInstance model:NonGenericTargetWeightConstraint}" MinWidth="150">
                                <DataGridTemplateColumn.Header>
                                    <l:Catalog Message="Weight"/>
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Slider IsEnabled="True" Width="100" TickFrequency="1" IsSnapToTickEnabled="True" Margin="0,2"
                                                    Value="{Binding Weight, UpdateSourceTrigger=PropertyChanged}" Minimum="{Binding MinWeight}" Maximum="{Binding MaxWeight}"/>
                                            <Label Content="{Binding Weight}" Width="50" ContentStringFormat="{}{0}%"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Command="{Binding DataContext.RemovePseudoConstraintCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                                CommandParameter="{Binding}" Width="30" Height="30"
                                                Style="{DynamicResource MetroCircleButtonStyle}">
                                            <ContentControl Template="{StaticResource ExitIcon}" />
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>

            <!-- 'Tree + gear' mode not yet implemented -->
            <!--<TabItem metroControls:ControlsHelper.HeaderFontSize="15"
                     IsEnabled="False" ToolTipService.ShowOnDisabled="True">
                <TabItem.Header>
                    <l:Catalog Message="Combined Attributes"/>
                </TabItem.Header>
                <TabItem.ToolTip>
                    <l:Catalog Message="Not enabled in 'Tree only' mode."/>
                </TabItem.ToolTip>
            </TabItem>-->

            <TabItem metroControls:ControlsHelper.HeaderFontSize="15">
                <TabItem.Header>
                    <l:Catalog Message="Settings"/>
                </TabItem.Header>
                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="200" />
                    </Grid.RowDefinitions>
                    <!-- 'Tree + gear' mode not yet implemented -->
                    <metroControls:ToggleSwitch Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="5,0,0,5"
                                                HorizontalAlignment="Center"
                                                IsChecked="{Binding TreePlusItemsMode}"
                                                Visibility="Collapsed">
                        <metroControls:ToggleSwitch.OnLabel>
                            <l:Catalog Message="Tree + Items"/>
                        </metroControls:ToggleSwitch.OnLabel>
                        <metroControls:ToggleSwitch.OffLabel>
                            <l:Catalog Message="Tree only"/>
                        </metroControls:ToggleSwitch.OffLabel>
                    </metroControls:ToggleSwitch>

                    <Button Grid.Column="1" Grid.Row="1" Margin="4,4,4,4"
                            HorizontalAlignment="Center" VerticalAlignment="Center"
                            Command="{Binding ReloadPseudoAttributesCommand}">
                        <l:Catalog Message="Reload Pseudo Attributes from filesystem"/>
                    </Button>

                    <!-- WeaponClass -->
                    <GroupBox Grid.Row="1" Grid.Column="0" VerticalAlignment="Center">
                        <GroupBox.Header>
                            <l:Catalog Message="Weapon class"/>
                        </GroupBox.Header>
                        <ComboBox HorizontalAlignment="Left" MinWidth="130" Margin="5,0" VerticalAlignment="Center"
                              SelectedValue="{Binding WeaponClass}" ItemsSource="{Binding WeaponClassValues}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={StaticResource EnumToDescriptionConverter}}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </GroupBox>

                    <!-- OffHand -->
                    <GroupBox Grid.Row="2" Grid.Column="0">
                        <GroupBox.Header>
                            <l:Catalog Message="Off hand"/>
                        </GroupBox.Header>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <RadioButton Grid.Row="0" Content="Shield" GroupName="OffHand"
                                 IsEnabled="{Binding WeaponClassIsTwoHanded, Converter={StaticResource InvertBoolConverter}}"
                                 IsChecked="{Binding OffHand, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static pseudoAttributes:OffHand.Shield}}" />
                            <RadioButton Grid.Row="1" Content="Dual wield" GroupName="OffHand"
                                 IsEnabled="{Binding WeaponClassIsTwoHanded, Converter={StaticResource InvertBoolConverter}}"
                                 IsChecked="{Binding OffHand, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static pseudoAttributes:OffHand.DualWield}}" />
                            <RadioButton Grid.Row="2" Content="Two handed" GroupName="OffHand"
                                 IsEnabled="{Binding WeaponClassIsTwoHanded}"
                                 IsChecked="{Binding OffHand, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static pseudoAttributes:OffHand.TwoHanded}}" />
                        </Grid>
                    </GroupBox>

                    <!-- Tags -->
                    <GroupBox Grid.Row="2" Grid.Column="1">
                        <GroupBox.Header>
                            <l:Catalog Message="Tags"/>
                        </GroupBox.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <CheckBox Grid.Row="0" Grid.Column="0" Content="Attack"
                              IsChecked="{Binding Tags, Converter={StaticResource FlagsToBoolConverter}, ConverterParameter={x:Static pseudoAttributes:Tags.Attack}}"/>
                            <CheckBox Grid.Row="1" Grid.Column="0" Content="Melee"
                              IsChecked="{Binding Tags, Converter={StaticResource FlagsToBoolConverter}, ConverterParameter={x:Static pseudoAttributes:Tags.Melee}}"/>
                            <CheckBox Grid.Row="2" Grid.Column="0" Content="Duration"
                              IsChecked="{Binding Tags, Converter={StaticResource FlagsToBoolConverter}, ConverterParameter={x:Static pseudoAttributes:Tags.Duration}}"/>
                            <CheckBox Grid.Row="3" Grid.Column="0" Content="Projectile"
                              IsChecked="{Binding Tags, Converter={StaticResource FlagsToBoolConverter}, ConverterParameter={x:Static pseudoAttributes:Tags.Projectile}}"/>
                            <CheckBox Grid.Row="0" Grid.Column="1" Content="Spell" Margin="10,0"
                              IsChecked="{Binding Tags, Converter={StaticResource FlagsToBoolConverter}, ConverterParameter={x:Static pseudoAttributes:Tags.Spell}}"/>
                            <CheckBox Grid.Row="1" Grid.Column="1" Content="Trap" Margin="10,0"
                              IsChecked="{Binding Tags, Converter={StaticResource FlagsToBoolConverter}, ConverterParameter={x:Static pseudoAttributes:Tags.Trap}}"/>
                            <CheckBox Grid.Row="2" Grid.Column="1" Content="Mine" Margin="10,0"
                              IsChecked="{Binding Tags, Converter={StaticResource FlagsToBoolConverter}, ConverterParameter={x:Static pseudoAttributes:Tags.Mine}}"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" Content="Totem" Margin="10,0"
                              IsChecked="{Binding Tags, Converter={StaticResource FlagsToBoolConverter}, ConverterParameter={x:Static pseudoAttributes:Tags.Totem}}"/>
                            <CheckBox Grid.Row="0" Grid.Column="2" Content="Area"
                              IsChecked="{Binding Tags, Converter={StaticResource FlagsToBoolConverter}, ConverterParameter={x:Static pseudoAttributes:Tags.Area}}"/>
                            <CheckBox Grid.Row="1" Grid.Column="2" Content="Cast"
                              IsChecked="{Binding Tags, Converter={StaticResource FlagsToBoolConverter}, ConverterParameter={x:Static pseudoAttributes:Tags.Cast}}"/>
                        </Grid>
                    </GroupBox>
                </Grid>
            </TabItem>
        </TabControl>

    </Grid>
</UserControl>
