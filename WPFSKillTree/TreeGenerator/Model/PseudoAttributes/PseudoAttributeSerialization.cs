using System.Xml.Serialization;

namespace POESKillTree.TreeGenerator.Model.PseudoAttributes
{
    /// <summary>
    /// Describes as Xml deserialized PseudoAttributes.
    /// See files in Data/PseudoAttributes/
    /// </summary>
    // Generated by "Edit -> Paste Special -> Paste XML as classes" and simplified.
    
    [XmlType(AnonymousType = true)]
    [XmlRoot(Namespace = "", IsNullable = false, ElementName = "PseudoAttributes")]
    public class XmlPseudoAttributes
    {
        [XmlElement("PseudoAttribute")]
        public XmlPseudoAttribute[] PseudoAttributes { get; set; }
    }
    
    [XmlType(AnonymousType = true)]
    public class XmlPseudoAttribute
    {
        [XmlElement("PseudoAttribute")]
        public XmlNestedPseudoAttribute[] PseudoAttributes { get; set; }

        [XmlElement("Attribute")]
        public XmlNestedAttribute[] Attributes { get; set; }
        
        [XmlAttribute]
        public string Name { get; set; }

        [XmlAttribute]
        public string Hidden { get; set; }

        [XmlAttribute]
        public string Group { get; set; }
    }
    
    [XmlType(AnonymousType = true)]
    public class XmlNestedPseudoAttribute
    {
        [XmlAttribute]
        public string Name { get; set; }
    }
    
    [XmlType(AnonymousType = true)]
    public class XmlNestedAttribute
    {
        public XmlAttributeConditions Conditions { get; set; }

        [XmlAttribute]
        public string Name { get; set; }

        [XmlAttribute]
        public decimal ConversionMultiplier { get; set; }

        [XmlIgnore]
        public bool ConversionMultiplierSpecified { get; set; }
    }
    
    [XmlType(AnonymousType = true)]
    public class XmlAttributeConditions
    {
        [XmlElement("AndComposition", typeof(XmlAndComposition))]
        [XmlElement("OffHand", typeof(string))]
        [XmlElement("Tag", typeof(string))]
        [XmlElement("WeaponClass", typeof(string))]
        [XmlElement("Keystone", typeof(string))]
        [XmlChoiceIdentifier("ItemsElementName")]
        public object[] Items { get; set; }

        [XmlElement("ItemsElementName")]
        [XmlIgnore]
        public XmlItemsChoiceType[] ItemsElementName { get; set; }
    }
    
    [XmlType(AnonymousType = true)]
    public class XmlAndComposition
    {
        public string WeaponClass { get; set; }

        public string Keystone { get; set; }

        public string OffHand { get; set; }

        public string Tag { get; set; }

        public XmlNotCondition NotCondition { get; set; }
    }
    
    [XmlType(AnonymousType = true)]
    public class XmlNotCondition
    {
        public string WeaponClass { get; set; }

        public string Keystone { get; set; }

        public string OffHand { get; set; }

        public string Tag { get; set; }
    }
    
    [XmlType(IncludeInSchema = false)]
    public enum XmlItemsChoiceType
    {
        AndComposition,
        OffHand,
        Tag,
        WeaponClass,
        Keystone
    }
}